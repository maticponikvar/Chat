{"version":3,"sources":["components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","components/layout/Navbar.js","store/actions/GETPost/successPosts.js","store/actions/GETPost/errorPosts.js","store/actions/GETPost/porcessedPosts.js","store/actions/GETPost/requestPosts.js","store/actions/GETUsers/successUsers.js","store/actions/GETUsers/errorUsers.js","store/actions/GETUsers/processedUsers.js","store/actions/GETUsers/requestUsers.js","components/posts/Home.js","store/actions/POSTPost/processedCreation.js","store/actions/POSTPost/successCreation.js","store/actions/POSTPost/errorCreation.js","store/actions/POSTPost/createPost.js","components/posts/AddPost.js","store/actions/POSTComment/processedCommentCreation.js","store/actions/POSTComment/successCommentCreation.js","store/actions/POSTComment/errorCommentCreation.js","store/actions/POSTComment/createComment.js","components/posts/Comment.js","store/actions/DELETEPost/successDeletion.js","store/actions/DELETEPost/errorDeletion.js","store/actions/DELETEPost/processedDeletion.js","store/actions/DELETEPost/deletePost.js","components/posts/Post.js","components/auth/SignIn.js","components/auth/SignOut.js","Hoc.js","App.js","serviceWorker.js","store/reducers/postsReducer.js","store/reducers/usersReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store.js","Loading.js","index.js"],"names":["SignedOutLinks","react_default","a","createElement","className","SignedInLinks","react_router_dom","to","Navbar","href","class","this","props","loggedin","layout_SignedOutLinks","Component","connect","state","ownProps","auth","successPosts","posts","username","type","status","errorPosts","err","error","porcessedPosts","requestPosts","dispatch","axios","get","withCredentials","then","res","data","console","log","catch","processedPosts","successUsers","usernames","errorUsers","porcessedUsers","requestUsers","processedUsers","Home","loggedIn","_this$props","postsdata","postsList","slice","reverse","map","post","date","Date","toDateString","key","_id","title","content","style","possition","float","comments","length","author","users","processedCreation","successCreation","getState","errorCreation","e","createPost","permissions","selected","fetch","credentials","method","body","JSON","stringify","headers","Content-Type","AddPost","_this","Object","classCallCheck","members","selection","filter","member","possibleConstructorReturn","getPrototypeOf","call","handleSelection","event","setState","target","value","handleClose","open","handleOpen","handleChange","defineProperty","name","handleSubmit","preventDefault","mmbrs","visibleFor","_this2","onSubmit","TextField","onChange","required","placeholder","multiline","fullWidth","FormControl","Button","id","onClick","variant","Select","multiple","input","Input","display","onClose","MenuProps","anchorEl","document","getElementById","marginTop","index","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","processedCommentCreation","comment","errorCommentCreation","createComment","successCommentCreation","Comment","Fragment","successDeletion","errorDeletion","processedDeletion","deletePost","di","Post","handleDelete","match","params","path_id","history","push","permit","toString","fontSize","replace","marginRight","Tooltip","posts_Comment","ownUsername","find","SignIn","password","json","sendUsername","htmlFor","SignOut","localStorage","removeItem","Hoc","ComponentToProtect","_Component","_class","loading","redirect","inherits","createClass","Error","_this$state","react_router","App","layout_Navbar","exact","path","component","Boolean","window","location","hostname","initState","postsReducer","arguments","undefined","action","objectSpread","concat","toConsumableArray","_ref","usersReducer","authReducer","rootReducer","combineReducers","loggerMiddleware","createLogger","middleware","thunk","configureStore","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","composeEnhancers","createStore","config","storage","combinedReducer","persistReducer","createAppStore","store","persistor","persistStore","Loading","ReactDOM","render","es","integration_react","Loading_Loading","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9609b57.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        {/* <li><NavLink to='/signup'>Sign up</NavLink></li> */}\n        {/* <li><NavLink to='/signin'>Login</NavLink></li> */}\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { NavLink } from \"react-router-dom\"\n\nexport default function SignedInLinks() {\n  return (\n    <div>\n      <li><NavLink to=\"/\">Home</NavLink></li>\n      <li><NavLink to=\"/addpost\">Add Post</NavLink></li>\n      <li><NavLink to='/signout'>Sign out</NavLink></li>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n// import { NavLink } from \"react-router-dom\"\nimport SignedOutLinks from \"./SignedOutLinks\"\nimport SignedInLinks from \"./SignedInLinks\"\nimport { connect } from \"react-redux\"\n\n\n\nclass Navbar extends Component {\n\n\n  render() {\n    //console.log(this.props)\n    return (\n      <nav className=\"nav-wrapper left-align blue darken-4\">\n        <div className=\"cointainer\">\n        <a href=\"/\" class=\"brand-logo left\">Chat Room</a>\n          <ul className=\"right\">\n            {!this.props.loggedin ? <SignedOutLinks /> : < SignedInLinks />}\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state.auth)\n  return {\n    loggedin: state.auth.loggedin,\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","const successPosts = (posts, username) => {\n        return{\n            type: \"POSTS_SUCCESS\",\n            status : \"successful\",\n            posts,\n            username\n        }\n\n}\n\nexport default successPosts\n","const errorPosts = (err) =>{\n    return {\n        type: \"POSTS_ERROR\",\n        status: \"error\",\n        error: err}\n}\n\nexport default errorPosts\n","const porcessedPosts = () => {\n    return{\n        type : \"POSTS_REQUEST\",\n        status: \"pending\"\n    }\n}\n\nexport default porcessedPosts\n","import axios from \"axios\"\nimport successPosts from \"./successPosts\"\nimport errorPosts from \"./errorPosts\"\nimport processedPosts from \"./porcessedPosts\"\n\nconst requestPosts = () => {\n    return (dispatch) => {\n        \n        axios.get(\"/api/posts/\", { withCredentials: true })\n            .then((res) => {\n                const posts = res.data.posts\n                const username = res.data.username\n                console.log(res)\n                dispatch(successPosts(posts, username)\n                )\n            })\n            .catch((err) => {\n                console.error(err)\n                dispatch(errorPosts(err))\n            })\n        dispatch(processedPosts())\n    }\n}\n\nexport default requestPosts","const successUsers = (usernames) => {\n    console.log(usernames)\n    return{\n        type: \"USERS_SUCCESS\",\n        status : \"successful\",\n        usernames\n    }\n}\n\nexport default successUsers\n","const errorUsers = (err) => {\n    return {\n        type: \"USERS_ERROR\",\n        status: \"error\",\n        error: err\n    }\n}\n\nexport default errorUsers\n","const porcessedUsers = () => {\n    return {\n        type: \"USERS_REQUEST\",\n        status: \"pending\"\n    }\n}\n\nexport default porcessedUsers","import axios from \"axios\"\nimport successUsers from \"./successUsers\"\nimport errorUsers from \"./errorUsers\"\nimport processedUsers from \"./processedUsers.js\"\n\nconst requestUsers = () => {\n    return (dispatch) => {\n        axios.get(\"/api/auth/users\", { withCredentials: true })\n            .then((res) => {\n                const usernames = res.data.usernames\n                dispatch(successUsers(usernames)\n                )\n            })\n            .catch((err) => {\n                dispatch(errorUsers(err))\n            })\n        dispatch(processedUsers())\n    }\n}\n\nexport default requestUsers","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport requestPosts from \"../../store/actions/GETPost/requestPosts\"\nimport requestUsers from \"../../store/actions/GETUsers/requestUsers\"\n\nclass Home extends Component {\n\n  componentWillMount() {\n    this.props.requestPosts()\n    this.props.requestUsers()\n  }\n\n  render() {\n    this.props.loggedIn()\n    const { postsdata, status } = this.props\n\n    const postsList = postsdata.slice(0).reverse().map((post) => {\n      let date = new Date(post.date)\n      date = date.toDateString()\n      return (\n        <div className=\"post card\" key={post._id} >\n          <div className=\"card-content\">\n            <Link to={\"/proposal/\" + post._id} className=\"black-text\" ><span className=\"card-title blue-text\">{post.title}</span> </Link>\n            <span className=\"card-body\">{post.content}</span>\n            <br />\n            <br />\n            <p className=\"right-align\">\n              <span style={{ possition: \"relative\", float: \"left\" }}>\n                <i className=\"material-icons\">comment</i>\n                {!post.comments ? \"0\" : post.comments.length}</span>\n              <span className=\"card-body\">Posted by {post.author} </span>\n              <span className=\"card-footer\">on {date} </span>\n            </p>\n          </div>\n        </div>\n      )\n    })\n\n    return (\n      <div className=\"container\">\n        {status === \"pending\" ? <h2 className=\"center-align\">Loading...</h2> : (postsList.length === 0 ? <h2 className=\"center-align\">No posts yet</h2> : postsList)}\n      </div>\n    )\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    requestPosts: () => dispatch(requestPosts()),\n    requestUsers: () => dispatch(requestUsers()),\n    loggedIn: () => { dispatch({ type: \"LOGGEDIN\", loggedin: true }) }\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedin: state.auth.loggedin,\n    postsdata: state.postsdata.posts,\n    users: state.users.users\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","const processedCreation = () => {\n  return {\n    type: \"CREATION_REQUEST\",\n    status: \"pending\"\n  }\n}\n\nexport default processedCreation\n","const successCreation = (post, getState) => {\n  console.log(getState, \"GETETETETSTATATA\")\n  return {\n    type : \"CREATION_SUCCESS\",\n    status: \"successfulCreation\",\n    post\n    }\n}\n\nexport default successCreation\n","const errorCreation = (e) => {\n  return {\n    type: \"CREATION_ERROR\",\n    status: \"errorPost\",\n    error: e\n  }\n}\n\nexport default errorCreation\n","//import axios from \"axios\";\nimport processedCreation from \"./processedCreation\"\nimport successCreation from \"./successCreation\"\nimport errorCreation from \"./errorCreation\"\n\nconst createPost = (post) => {\n  //console.log(post, \"post lin 7\")\n  return (dispatch, getState) => {\n    const data = {\n      title: post.title,\n      content: post.content,\n      permissions: post.selected\n    }\n\n    fetch(\"/api/posts/submitPost\",\n      {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then((res) => {\n        dispatch(successCreation(post, getState))\n      })\n      .catch((e) => {\n        dispatch(errorCreation(e))\n      })\n    dispatch(processedCreation())\n    //dispatch(processedCreation())\n  }\n}\n\nexport default createPost\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport createPost from \"../../store/actions/POSTPost/createPost\"\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\nclass AddPost extends Component {\n  constructor(props) {\n    const members = props.users\n    const username = props.username\n    const selection = members.filter((member) => { return member !== username })\n    console.log(selection, \"Selcetion\")\n    super(props)\n    this.mmbrs = members\n    this.state = {\n      title: \"\",\n      content: \"\",\n      author: \"\",\n      open: false,\n      visibleFor: selection,\n      selected: members\n    }\n  }\n\n\n  handleSelection = event => {\n    this.setState({ selected: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.dispatch(createPost(this.state))\n    this.setState({\n      content: \"\",\n      title: \"\",\n      selected: this.mmbrs\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\" >\n        <div>{this.props.status === \"successfulCreation\" ? <h2 className=\"center-align\">Successfully created</h2> : this.props.status === \"errorPost\" ? <h2 className=\"center-align\">Something went wrong</h2> : <h2> </h2>}</div>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"input-field\">\n            <TextField\n              name=\"title\"\n              onChange={this.handleChange}\n              required\n              value={this.state.title}\n              placeholder=\"Titile\"\n              multiline={true}\n              fullWidth={true} />\n          </div>\n          <div className=\"input-field\">\n            <TextField\n              name=\"content\"\n              onChange={this.handleChange}\n              required\n              value={this.state.content}\n              placeholder=\"Content\"\n              multiline={true}\n              fullWidth={true} />\n          </div>\n          <div>\n            <FormControl>\n              <Button id=\"openMenu\" className=\"blue darken-4 white-text\" onClick={this.handleOpen} variant=\"contained\">\n                Choose participants\n          </Button>\n              <Select\n                multiple\n                required\n                name=\"slected\"\n                value={this.state.selected}\n                onChange={this.handleSelection}\n                input={<Input id=\"select-multiple-checkbox \" />}\n                style={{ display: \"none\" }}\n                open={this.state.open}\n                onClose={this.handleClose}\n                MenuProps={{\n                  anchorEl: document.getElementById(\"openMenu\"),\n                  style: { marginTop: 60 }\n                }}\n              >\n                {this.state.visibleFor.map((name, index) => (\n                  <MenuItem key={name + index} value={name}>\n                    <Checkbox checked={this.state.selected.indexOf(name) > -1} />\n                    <ListItemText primary={name} />\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <br />\n          <div className=\"center\">\n            <button className=\"btn blue darken-4 \" onClick={this.handleSubmit}>Sumbit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.users.users,\n    username: state.postsdata.username,\n    status: state.postsdata.status\n  }\n}\n\nexport default connect(mapStateToProps)(AddPost)","const processedCommentCreation = () => {\n    return {\n      type : \"CREATION_REQUEST\",\n      status:\"pending\"\n    }\n  }\n  \n  export default processedCommentCreation\n  ","const successCreation = (comment, getState) => {\n    console.log(getState, \"GETETETETSTATATA\")\n  return {\n    type : \"COMMENTCREATION_SUCCESS\",\n    status: \"successful\",\n    comment\n  }\n}\n  \nexport default successCreation\n  ","const errorCommentCreation = (e) => {\n    return {\n      type : \"CREATION_ERROR\",\n      status: \"error\",\n      error : e\n    }\n  }\n  \n  export default errorCommentCreation\n  ","//import axios from \"axios\";\nimport processedCommentCreation from \"./processedCommentCreation\"\nimport successCommentCreation from \"./successCommentCreation\"\nimport errorCommentCreation from \"./errorCommentCreation\"\n\nconst createComment = (comment) => {\n  return (dispatch, getState) => {\n    const data = {\n      comment: comment,\n      id: comment.id\n    }\n    fetch(\"/api/posts/submitComment\",\n      {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then((res) => {\n        dispatch(successCommentCreation(comment))\n      })\n      .catch((e) => {\n        dispatch(errorCommentCreation(e))\n      })\n    dispatch(processedCommentCreation())\n  }\n}\n\nexport default createComment\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport createComment from \"../../store/actions/POSTComment/createComment\"\nimport { connect } from 'react-redux';\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      comment: \"\",\n      id: this.props.id\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.createComment(this.state)\n    this.setState({\n      comment: \"\",\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"input-field\">\n                <TextField\n                  onSubmit={this.handleSubmit}\n                  name=\"comment\"\n                  onChange={this.handleChange}\n                  value={this.state.comment}\n                  required\n                  placeholder=\"Write here\"\n                  multiline={true}\n                  fullWidth={true} />\n              </div>\n              <div className=\"center\">\n                <button className=\"btn blue darken-4\">Sumbit</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    createComment: (comment) => dispatch(createComment(comment))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Comment)","const successDeletion = (id, getState) => {\n    //console.log(getState, \"GETETETETSTATATA\")\n    return {\n      type : \"DELETION_SUCCESS\",\n      status: \"successfulDeletion\",\n      id\n      }\n  }\n  \n  export default successDeletion\n  ","const errorDeletion = (e) => {\n    return {\n      type : \"DELETION_ERROR\",\n      status: \"error\",\n      error : e\n    }\n  }\n  \n  export default errorDeletion\n  ","const processedDeletion = () => {\n    return {\n      type : \"DELETION_REQUEST\",\n      status:\"pending\"\n    }\n  }\n  \n  export default processedDeletion\n  ","// import axios from \"axios\"\nimport successDeletion from \"./successDeletion\"\nimport errorDeletion from \"./errorDeletion\"\nimport processedDeletion from \"./processedDeletion.js\"\n\nconst deletePost = (id) => {\n    //console.log(id)\n    return(dispatch) =>{\n        const di = {\n            id: id}\n        fetch(\"/api/posts/deletePost\", \n        {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(di),\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      })\n        .then((res) => {\n            dispatch(successDeletion(id))\n        })\n        .catch((err)=>{\n            dispatch(errorDeletion(err))\n        })\n    dispatch(processedDeletion())\n    }\n}\n\nexport default deletePost","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport Comment from \"./Comment\"\nimport deletePost from \"../../store/actions/DELETEPost/deletePost\"\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"\",\n      content: \"\",\n      post: this.props.post\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.createComment(this.state)\n  }\n\n  handleDelete = (e) => {\n    this.props.dispatch(deletePost(this.props.match.params.path_id))\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    const { post, username } = this.props\n    const { author } = this.props.post\n    const id = this.props.match.params.path_id\n\n    const comments = post.comments.map((comment) => {\n      comment.date = new Date(comment.date)\n      comment.date = comment.date.toDateString()\n      return (\n        <div className=\"post card\" key={comment._id}>\n          <div className=\"card-content\">\n            <span className=\"card-body\"  >{comment.comment}</span>\n            <br />\n            <br />\n            <div className=\"right-align\">\n              <span className=\"card-footer\" style={{ float: \"left\" }}>\n                Posted by {!comment.author ? username : comment.author} {comment.date === \"Invalid Date\" ? <span>just now</span> : <span>on {comment.date}</span>}\n              </span>\n              <span className=\"card-footer\">\n                <i className=\"material-icons\">thumb_up</i>\n              </span>\n            </div>\n          </div>\n        </div>\n      )\n    })\n\n    let permit = post.permissions.toString()\n    permit = <p style={{ fontSize: 13 }}>{permit.replace(/,/g, ', ')}</p>\n    post.date = new Date(post.date)\n    post.date = post.date.toDateString()\n\n    return (\n      <div className=\"container\">\n        <div className=\"post card\" key={post._id} >\n          <div className=\"card-content\">\n            <span className=\"card-title\">{post.title}</span>\n            <span className=\"card-body\"  >{post.content}</span>\n\n            <br />\n            <br />\n            <div className=\"right-align\">\n              <span className=\"card-footer\" style={{ float: \"left\" }}>\n                Posted by {post.author} on {post.date}\n              </span>\n              <span className=\"card-footer\" >\n                {author === username\n                  ?\n                  <React.Fragment>\n                    <Button onClick={this.handleDelete} className=\"btn card-footer blue darken-4 z-depth-0 white-text\" style={{ marginRight: \"15px\" }}>Delete</Button>\n\n                    <Tooltip title={permit} >\n                      <Button className=\"btn card-footer blue darken-4 z-depth-0 white-text\">Visible to</Button>\n                    </Tooltip>\n                  </React.Fragment>\n                  :\n                  <Tooltip title={permit} >\n                    <Button className=\"btn card-footer blue darken-4 z-depth-0 white-text\">Visible to</Button>\n                  </Tooltip>}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div>{comments}</div>\n        < Comment id={id} ownUsername={this.props.ownUsername} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.path_id\n  return {\n    post: state.postsdata.posts.find(post => post._id === id),\n    status: state.postsdata.status,\n    users: state.users.usernames,\n    username: state.postsdata.username\n  }\n}\n\nexport default connect(mapStateToProps)(Post)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Redirect } from 'react-router'\n\nclass SignIn extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    //const {email, password} = this.state\n    console.log(this.props.history)\n    e.preventDefault();\n\n          fetch(\"/api/auth/authenticate\", {\n            credentials: 'include',\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          // var body = await res.json()\n      \n          //     console.log(body)\n            .then((res) => {\n              // console.log(res)\n              // console.log(history)\n              if (200) {\n                console.log(\"resss poglej cookie\", res)\n                // console.log(res.text())\n                return res.json();\n              } else {\n                const error = new Error(res.error)\n                throw error;\n              }\n            })\n            .then((ownUsername) => {\n              // console.log(username)\n              this.props.sendUsername(ownUsername)\n              this.props.history.push(\"/\")\n            })\n            .catch(err => {\n              console.error(err);\n              // dispatch(errorLogIn(err))\n            })\n            // dispatch(processedLogIn())\n        }\n      \n          \n    // console.log(this.props,\"prooops\")\n    \n\n  render() {\n\n    // const { authError, auth } = this.props;\n    // if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" id='username' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue darken-4\">Login</button>\n            <div className=\"center red-text\">\n              {/* { authError ? <p>{authError}</p> : null } */}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendUsername: (ownUsername) => { dispatch({ type: \"LOGIN_SUCCESS\", ownUsername: ownUsername }) }\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport axios from \"axios\"\nimport { connect } from \"react-redux\"\n\nclass SignOut extends Component {\n\n  componentDidMount() {\n\n    axios.get(\"/api/auth/signOut\", { withCredentials: true })\n      .then((res) => {\n        console.log(res, \"bodyyyy\")\n        console.log(this.props)\n\n        this.props.loggedIn()\n        localStorage.removeItem(\"persist:root\")\n        this.props.history.push(\"/signin\")\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"center-align\">Logging out...</h2>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loggedIn: () => { dispatch({ type: \"LOGGEDOUT\" }) }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignOut)","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Hoc(ComponentToProtect) {\n  return class extends Component {\n    constructor(props) {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n\n    componentDidMount() {\n      axios.get(\"/api/auth/checkToken/\", { withCredentials: true })\n        .then(res => {\n          console.log(res.status)\n          if (res.status === 200) {\n            this.setState({ loading: false });\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({ loading: false, redirect: true });\n        });\n    }\n\n    render() {\n      const { loading, redirect } = this.state;\n      return (\n        <div>\n          {loading\n            ? <p> </p>\n            : redirect\n              ? <Redirect to=\"/signin\" />\n              : <React.Fragment>\n                <ComponentToProtect {...this.props} />\n              </React.Fragment>}\n        </div>\n      )\n    }\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport { Switch, Route, Router, BrowserRouter, HashRouter } from \"react-router-dom\"\n// import './App.css';\nimport Navbar from \"./components/layout/Navbar\"\nimport Home from \"./components/posts/Home\"\nimport AddPost from \"./components/posts/AddPost\"\nimport Post from \"./components/posts/Post\"\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\n// import SignUp from './components/auth/SignUp'\nimport Hoc from \"./Hoc\"\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Hoc(Home)} />\n          <Route path=\"/AddPost\" component={Hoc(AddPost)} />\n          <Route path='/signin' component={SignIn} />\n          {/* <Route path='/signup' component={SignUp} /> */}\n          <Route path='/signout' component={Hoc(SignOut)} />\n          <Route path=\"/proposal/:path_id\" component={Hoc(Post)} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  posts: [],\n  status: \"\",\n  username: \"\"\n}\n\nconst postsReducer = (state = initState, action) => {\n\n  switch (action.type) {\n    case \"POSTS_REQUEST\":\n      const requested = {\n        ...state,\n        status: action.status,\n      }\n      return requested\n\n    case \"CREATION_REQUEST\":\n      const creationRequested = {\n        ...state,\n        status: action.status,\n      }\n      return creationRequested\n\n    case \"DELETION_REQUEST\":\n      const deletionRequested = {\n        ...state,\n        status: action.status,\n      }\n      return deletionRequested\n\n    case \"POSTS_SUCCESS\":\n      const success = {\n        ...state,\n        status: action.status,\n        posts: action.posts,\n        username: action.username,\n      }\n      return success\n\n    case \"CREATION_SUCCESS\":\n      const creationSucc = {\n        ...state,\n        posts: [...state.posts, action.post],\n        status: action.status\n      }\n      return creationSucc\n\n    case \"DELETION_SUCCESS\":\n      const deletionSuccess = {\n        ...state,\n        status: action.status,\n        posts: state.posts.filter(({ id }) => id !== action.data),\n      }\n      return deletionSuccess\n\n    case \"POSTS_ERROR\":\n      const error = {\n        ...state,\n        status: action.status\n      }\n      return error\n\n    case \"CREATION_ERROR\":\n      const creationError = {\n        ...state,\n        status: action.status\n      }\n      return creationError\n\n    case \"DELETION_ERROR\":\n      const deletionError = {\n        ...state,\n        status: action.status\n      }\n      return deletionError\n\n    case \"COMMENTCREATION_SUCCESS\":\n      const { id } = action.comment\n      const find = state.posts.find(post => {\n        return (post._id === id)\n      })\n      const index = state.posts.indexOf(find)\n      const creationCommentSucc = {\n        ...state,\n        posts: [\n          ...state.posts.slice(0, index),\n          {\n            ...state.posts[index],\n            comments: [...state.posts[index].comments,\n            action.comment]\n          },\n          ...state.posts.slice(index)\n        ]\n      }\n      return creationCommentSucc\n\n    default:\n      return state\n  }\n\n}\n\nexport default postsReducer\n","const initState = {\n    usernames: [],\n    status: \"\"\n}\n\nconst usersReducer = (state = initState, action) => {\n      switch(action.type) {\n          case \"USERS_REQUEST\":\n          const requested = {\n            ...state,\n            status:action.status,\n          }\n          return requested\n          case \"USERS_SUCCESS\" :\n          const success = {\n            ...state,\n            users:action.usernames\n          }\n          return success\n          case \"USERS_ERROR\"  :\n          const error = {\n              ...state,\n              status: action.status\n          }\n          return error\n          default:\n          return state\n      }\n  \n}\n\nexport default usersReducer\n","const initState = {\n  loggedin: false,\n  ownUsername: \"\",\n  // status:\"\"\n}\n\nconst authReducer = (state = initState, action) => {\n  //console.log(action, \"6\")\n  switch (action.type) {\n    case 'LOGGEDIN':\n      return {\n        ...state,\n        loggedin: true\n      }\n\n    case 'LOGGEDOUT':\n      console.log('signout success');\n      return {\n        ...state,\n        loggedin: false\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log(action);\n      return {\n        ...state,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default authReducer;","import postsReducer from './postsReducer';\nimport { combineReducers } from 'redux'\nimport usersReducer from './usersReducer';\nimport authReducer from './authReducer';\n\nconst rootReducer = combineReducers ({\n        postsdata: postsReducer,\n        users: usersReducer,\n        auth: authReducer\n})\n\nexport default rootReducer\n","import thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/es/storage'\nimport rootReducer from \"./store/reducers/rootReducer\"\n\nconst loggerMiddleware = createLogger()\n\nconst middleware = [thunk, loggerMiddleware]\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst configureStore = composeEnhancers(\n  applyMiddleware(...middleware),\n)(createStore)\n\nconst config = {\n  key: 'root',\n  storage,\n}\n\nconst combinedReducer = persistReducer(config, rootReducer)\n\nconst createAppStore = () => {\n  let store = configureStore(combinedReducer)\n  let persistor = persistStore(store)\n\n  return { persistor, store }\n}\n\nexport default createAppStore","import React, { Component } from 'react'\n\nexport default class Loading extends Component {\n  render() {\n    return (\n      <div>\n        <h1>LOADING...</h1>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport createAppStore from './store';\nimport Loading from \"./Loading\"\n\nconst { persistor, store } = createAppStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","components/layout/Navbar.js","store/actions/GETPost/successPosts.js","store/actions/GETPost/errorPosts.js","store/actions/GETPost/porcessedPosts.js","store/actions/GETPost/requestPosts.js","store/actions/GETUsers/successUsers.js","store/actions/GETUsers/errorUsers.js","store/actions/GETUsers/processedUsers.js","store/actions/GETUsers/requestUsers.js","components/posts/Home.js","store/actions/POSTPost/processedCreation.js","store/actions/POSTPost/successCreation.js","store/actions/POSTPost/errorCreation.js","store/actions/POSTPost/createPost.js","components/posts/AddPost.js","store/actions/POSTComment/processedCommentCreation.js","store/actions/POSTComment/successCommentCreation.js","store/actions/POSTComment/errorCommentCreation.js","store/actions/POSTComment/createComment.js","components/posts/Comment.js","store/actions/DELETEPost/successDeletion.js","store/actions/DELETEPost/errorDeletion.js","store/actions/DELETEPost/processedDeletion.js","store/actions/DELETEPost/deletePost.js","components/posts/Post.js","components/auth/SignIn.js","components/auth/SignOut.js","Hoc.js","App.js","serviceWorker.js","store/reducers/postsReducer.js","store/reducers/usersReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","store.js","Loading.js","index.js"],"names":["SignedOutLinks","react_default","a","createElement","className","SignedInLinks","react_router_dom","to","Navbar","href","class","this","props","loggedin","layout_SignedOutLinks","Component","connect","state","ownProps","auth","successPosts","posts","username","type","status","errorPosts","err","error","porcessedPosts","requestPosts","dispatch","axios","get","withCredentials","then","res","data","console","log","catch","processedPosts","successUsers","usernames","errorUsers","porcessedUsers","requestUsers","processedUsers","Home","_this","loggedIn","_this$props","postsdata","postsList","slice","reverse","map","post","date","Date","toDateString","key","_id","title","content","style","possition","float","comments","length","author","users","processedCreation","successCreation","getState","errorCreation","e","createPost","permissions","selected","fetch","credentials","method","body","JSON","stringify","headers","Content-Type","AddPost","Object","classCallCheck","members","selection","filter","member","possibleConstructorReturn","getPrototypeOf","call","handleSelection","event","setState","target","value","handleClose","open","handleOpen","handleChange","defineProperty","name","handleSubmit","preventDefault","mmbrs","visibleFor","_this2","onSubmit","TextField","onChange","required","placeholder","multiline","fullWidth","FormControl","Button","id","onClick","variant","Select","multiple","input","Input","display","onClose","MenuProps","anchorEl","document","getElementById","marginTop","index","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","processedCommentCreation","comment","errorCommentCreation","createComment","successCommentCreation","Comment","Fragment","successDeletion","errorDeletion","processedDeletion","deletePost","di","Post","handleDelete","match","params","path_id","history","push","d","toJSON","replace","permit","toString","fontSize","marginRight","Tooltip","posts_Comment","ownUsername","find","SignIn","password","json","sendUsername","htmlFor","SignOut","localStorage","removeItem","Hoc","ComponentToProtect","_Component","_class","loading","redirect","inherits","createClass","Error","_this$state","react_router","App","layout_Navbar","exact","path","component","Boolean","window","location","hostname","initState","postsReducer","arguments","undefined","action","objectSpread","concat","toConsumableArray","_ref","usersReducer","authReducer","rootReducer","combineReducers","loggerMiddleware","createLogger","middleware","thunk","configureStore","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","composeEnhancers","createStore","config","storage","combinedReducer","persistReducer","createAppStore","store","persistor","persistStore","Loading","ReactDOM","render","es","integration_react","Loading_Loading","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b674d83.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        {/* <li><NavLink to='/signup'>Sign up</NavLink></li> */}\n        {/* <li><NavLink to='/signin'>Login</NavLink></li> */}\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { NavLink } from \"react-router-dom\"\n\nexport default function SignedInLinks() {\n  return (\n    <div>\n      <li><NavLink to=\"/\">Home</NavLink></li>\n      <li><NavLink to=\"/addpost\">Add Post</NavLink></li>\n      <li><NavLink to='/signout'>Sign out</NavLink></li>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n// import { NavLink } from \"react-router-dom\"\nimport SignedOutLinks from \"./SignedOutLinks\"\nimport SignedInLinks from \"./SignedInLinks\"\nimport { connect } from \"react-redux\"\n\n\n\nclass Navbar extends Component {\n\n\n  render() {\n    //console.log(this.props)\n    return (\n      <nav className=\"nav-wrapper left-align blue darken-4\">\n        <div className=\"cointainer\">\n        <a href=\"#\" class=\"brand-logo left\">Chat Room</a>\n          <ul className=\"right\">\n            {!this.props.loggedin ? <SignedOutLinks /> : < SignedInLinks />}\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state.auth)\n  return {\n    loggedin: state.auth.loggedin,\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","const successPosts = (posts, username) => {\n        return{\n            type: \"POSTS_SUCCESS\",\n            status : \"successful\",\n            posts,\n            username\n        }\n\n}\n\nexport default successPosts\n","const errorPosts = (err) =>{\n    return {\n        type: \"POSTS_ERROR\",\n        status: \"error\",\n        error: err}\n}\n\nexport default errorPosts\n","const porcessedPosts = () => {\n    return{\n        type : \"POSTS_REQUEST\",\n        status: \"pending\"\n    }\n}\n\nexport default porcessedPosts\n","import axios from \"axios\"\nimport successPosts from \"./successPosts\"\nimport errorPosts from \"./errorPosts\"\nimport processedPosts from \"./porcessedPosts\"\n\nconst requestPosts = () => {\n    return (dispatch) => {\n        \n        axios.get(\"/api/posts/\", { withCredentials: true })\n            .then((res) => {\n                //console.log(res.dasdas, \"bodyyyy\")\n                const posts = res.data.posts\n                const username = res.data.username\n                console.log(res)\n                dispatch(successPosts(posts, username)\n                )\n            })\n            .catch((err) => {\n                console.error(err)\n                dispatch(errorPosts(err))\n            })\n        dispatch(processedPosts())\n    }\n}\n\nexport default requestPosts","const successUsers = (usernames) => {\n    console.log(usernames)\n    return{\n        type: \"USERS_SUCCESS\",\n        status : \"successful\",\n        usernames\n    }\n}\n\nexport default successUsers\n","const errorUsers = (err) =>{\n    return {\n        type: \"USERS_ERROR\",\n        status: \"error\",\n        error: err\n    }\n}\n\nexport default errorUsers\n","const porcessedUsers = () => {\n    return {\n        type : \"USERS_REQUEST\",\n        status: \"pending\"\n    }\n}\n\nexport default porcessedUsers","import axios from \"axios\"\nimport successUsers from \"./successUsers\"\nimport errorUsers from \"./errorUsers\"\nimport processedUsers from \"./processedUsers.js\"\n// import config from \".dsadasdas\"\n\nconst requestUsers = () => {\n    return(dispatch) =>{\n        axios.get(\"/api/auth/users\", {withCredentials: true})\n        .then((res) => {\n            //console.log(res.dasdas, \"bodyyyy\")\n            const usernames = res.data.usernames\n            //console.log(res.data)\n            dispatch(successUsers(usernames)\n            )\n        })\n        .catch((err)=>{\n            dispatch(errorUsers(err))\n        })\n        dispatch(processedUsers())\n    }\n}\n\nexport default requestUsers","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport requestPosts from \"../../store/actions/GETPost/requestPosts\"\nimport requestUsers from \"../../store/actions/GETUsers/requestUsers\"\n\nclass Home extends Component {\n\n  componentWillMount() {\n    this.props.requestPosts()\n    this.props.requestUsers()\n  }\n\n  render() {\n    this.props.loggedIn()\n    // console.log(this.props)\n    const { postsdata, status } = this.props\n    console.log(this.props)\n\n    const postsList = postsdata.slice(0).reverse().map((post) => {\n      console.log(this.props)\n      let date = new Date(post.date)\n      date = date.toDateString()\n      \n      return (\n        <div className=\"post card\" key={post._id} >\n          <div className=\"card-content\">\n            <Link to={\"/proposal/\" + post._id} className=\"black-text\" ><span className=\"card-title blue-text\">{post.title}</span> </Link>\n            <span className=\"card-body\">{post.content}</span>\n            <br />\n            <br />\n            <p className=\"right-align\">\n              <span style={{ possition: \"relative\", float: \"left\" }}>\n                <i className=\"material-icons\">comment</i>\n                {!post.comments ? \"0\" : post.comments.length}</span>\n              <span className=\"card-body\">Posted by {post.author} </span>\n              <span className=\"card-footer\">on {date} </span>\n            </p>\n          </div>\n        </div>\n      )\n    }\n    )\n\n    console.log(status)\n    return (\n      <div className=\"container\">\n        {status === \"pending\" ? <h2 className=\"center-align\">Loading...</h2> : (postsList.length === 0 ? <h2 className=\"center-align\">No posts yet</h2> : postsList)}\n      </div>\n    )\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    requestPosts: () => dispatch(requestPosts()),\n    requestUsers: () => dispatch(requestUsers()),\n    loggedIn: () => { dispatch({ type: \"LOGGEDIN\", loggedin: true }) }\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  //console.log(state.auth, \"STATEAUTH\")\n  // console.log(state, \"state\")\n  return {\n    loggedin: state.auth.loggedin,\n    postsdata: state.postsdata.posts,\n    users: state.users.users\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","const processedCreation = () => {\n  return {\n    type: \"CREATION_REQUEST\",\n    status: \"pending\"\n  }\n}\n\nexport default processedCreation\n","const successCreation = (post, getState) => {\n  console.log(getState, \"GETETETETSTATATA\")\n  return {\n    type : \"CREATION_SUCCESS\",\n    status: \"successfulCreation\",\n    post\n    }\n}\n\nexport default successCreation\n","const errorCreation = (e) => {\n  return {\n    type: \"CREATION_ERROR\",\n    status: \"errorPost\",\n    error: e\n  }\n}\n\nexport default errorCreation\n","//import axios from \"axios\";\nimport processedCreation from \"./processedCreation\"\nimport successCreation from \"./successCreation\"\nimport errorCreation from \"./errorCreation\"\n\nconst createPost = (post) => {\n  //console.log(post, \"post lin 7\")\n  return (dispatch, getState) => {\n    const data = {\n      title: post.title,\n      content: post.content,\n      permissions: post.selected\n    }\n\n    fetch(\"/api/posts/submitPost\",\n      {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then((res) => {\n        //console.log(getState, \"JDSDSAJKDHASHD\")\n        dispatch(successCreation(post, getState))\n      })\n      .catch((e) => {\n        //console.log(e)\n        dispatch(errorCreation(e))\n      })\n    dispatch(processedCreation())\n    //dispatch(processedCreation())\n  }\n}\n\nexport default createPost\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport createPost from \"../../store/actions/POSTPost/createPost\"\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\n\nclass AddPost extends Component {\n  constructor(props) {\n    const members = props.users\n    // console.log(props)\n    const username = props.username\n    const selection = members.filter((member) => { return member !== username })\n    console.log(selection, \"Selcetion\")\n    super(props)\n    this.mmbrs = members\n    this.state = {\n      title: \"\",\n      content: \"\",\n      author: \"\",\n      open: false,\n      visibleFor: selection,\n      selected: members\n    }\n  }\n\n\n  handleSelection = event => {\n    this.setState({ selected: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  //   handleClose = () => {\n  //     this.setState({ open: false });\n  //   };\n\n  //   handleOpen = () => {\n  //     this.setState({ open: true });\n  //   };\n\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n    //console.log(this.state)\n  }\n\n  handleSubmit = (e) => {\n    // console.log(prevState)\n    e.preventDefault()\n    this.props.dispatch(createPost(this.state))\n    this.setState({\n      content: \"\",\n      title: \"\",\n      selected: this.mmbrs\n    })\n  }\n\n  render() {\n\n    // const { auth } = this.props;\n    // if (!auth.uid) return <Redirect to='/signup' /> \n    console.log(this.props, \"PROPS\")\n    return (\n      <div className=\"container\" >\n        <div>{this.props.status === \"successfulCreation\" ? <h2 className=\"center-align\">Successfully created</h2> : this.props.status === \"errorPost\" ? <h2 className=\"center-align\">Something went wrong</h2> : <h2> </h2>}</div>\n        <form onSubmit={this.handleSubmit}>\n          {/* <div style={{ height: 100 }}>{JSON.stringify(this.state)}</div> */}\n          <div className=\"input-field\">\n            <TextField\n              name=\"title\"\n              onChange={this.handleChange}\n              required\n              value={this.state.title}\n              placeholder=\"Titile\"\n              multiline={true}\n              fullWidth={true} />\n          </div>\n          <div className=\"input-field\">\n            <TextField\n              name=\"content\"\n              onChange={this.handleChange}\n              required\n              value={this.state.content}\n              placeholder=\"Content\"\n              multiline={true}\n              fullWidth={true} />\n          </div>\n          <div>\n            <FormControl>\n              <Button id=\"openMenu\" className=\"blue darken-4 white-text\" onClick={this.handleOpen} variant=\"contained\">\n                Choose participants\n          </Button>\n              <Select\n                multiple\n                required\n                name=\"slected\"\n                value={this.state.selected}\n                onChange={this.handleSelection}\n                input={<Input id=\"select-multiple-checkbox \" />}\n                style={{ display: \"none\" }}\n                open={this.state.open}\n                onClose={this.handleClose}\n                MenuProps={{\n                  anchorEl: document.getElementById(\"openMenu\"),\n                  style: { marginTop: 60 }\n                }}\n              >\n                {this.state.visibleFor.map((name, index) => (\n                  <MenuItem key={name + index} value={name}>\n                    <Checkbox checked={this.state.selected.indexOf(name) > -1} />\n                    <ListItemText primary={name} />\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <br />\n          <div className=\"center\">\n            <button className=\"btn blue darken-4 \" onClick={this.handleSubmit}>Sumbit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     //console.log(ownProps, \"ownprops1111\")\n//    return {\n//         createPost: (post) => dispatch(createPost(post))\n//     }\n// }\n\nconst mapStateToProps = (state) => {\n  console.log(state.postsdata.status, \"state\")\n  return {\n    users: state.users.users,\n    // postsdata: state.postsdata,\n    username: state.postsdata.username,\n    status: state.postsdata.status\n  }\n}\n\nexport default connect(mapStateToProps)(AddPost)","const processedCommentCreation = () => {\n    return {\n      type : \"CREATION_REQUEST\",\n      status:\"pending\"\n    }\n  }\n  \n  export default processedCommentCreation\n  ","const successCreation = (comment, getState) => {\n    console.log(getState, \"GETETETETSTATATA\")\n  return {\n    type : \"COMMENTCREATION_SUCCESS\",\n    status: \"successful\",\n    comment\n  }\n}\n  \nexport default successCreation\n  ","const errorCommentCreation = (e) => {\n    return {\n      type : \"CREATION_ERROR\",\n      status: \"error\",\n      error : e\n    }\n  }\n  \n  export default errorCommentCreation\n  ","//import axios from \"axios\";\nimport processedCommentCreation from \"./processedCommentCreation\"\nimport successCommentCreation from \"./successCommentCreation\"\nimport errorCommentCreation from \"./errorCommentCreation\"\n\nconst createComment = (comment) => {\n  console.log(comment)\n  return (dispatch, getState) => {\n    console.log(getState, \"getstate\")\n    const data = {\n      comment: comment,\n      id: comment.id\n    }\n    //console.log(data, \"DARA\")\n    fetch(\"/api/posts/submitComment\",\n      {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then((res) => {\n        //console.log(getState, \"JDSDSAJKDHASHD\")\n        dispatch(successCommentCreation(comment))\n      })\n      .catch((e) => {\n        //console.log(e)\n        dispatch(errorCommentCreation(e))\n      })\n    dispatch(processedCommentCreation())\n    //dispatch(processedCreation())\n  }\n}\n\nexport default createComment\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport createComment from \"../../store/actions/POSTComment/createComment\"\nimport { connect } from 'react-redux';\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      comment: \"\",\n      id: this.props.id\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n    //console.log(this.state)\n  }\n\n  handleSubmit = (e) => {\n    // console.log(this.props)\n    e.preventDefault()\n    this.props.createComment(this.state)\n    this.setState({\n      comment: \"\",\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"input-field\">\n                <TextField\n                 onSubmit={this.handleSubmit}\n                  name=\"comment\"\n                  onChange={this.handleChange}\n                  value={this.state.comment}\n                  required\n                  placeholder=\"Write here\"\n                  multiline={true}\n                  fullWidth={true} />\n              </div>\n              <div className=\"center\">\n                <button className=\"btn blue darken-4\">Sumbit</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  console.log(ownProps)\n  return {\n    createComment: (comment) => dispatch(createComment(comment))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Comment)","const successDeletion = (id, getState) => {\n    //console.log(getState, \"GETETETETSTATATA\")\n    return {\n      type : \"DELETION_SUCCESS\",\n      status: \"successfulDeletion\",\n      id\n      }\n  }\n  \n  export default successDeletion\n  ","const errorDeletion = (e) => {\n    return {\n      type : \"DELETION_ERROR\",\n      status: \"error\",\n      error : e\n    }\n  }\n  \n  export default errorDeletion\n  ","const processedDeletion = () => {\n    return {\n      type : \"DELETION_REQUEST\",\n      status:\"pending\"\n    }\n  }\n  \n  export default processedDeletion\n  ","// import axios from \"axios\"\nimport successDeletion from \"./successDeletion\"\nimport errorDeletion from \"./errorDeletion\"\nimport processedDeletion from \"./processedDeletion.js\"\n\nconst deletePost = (id) => {\n    //console.log(id)\n    return(dispatch) =>{\n        //console.log(id)\n        const di = {\n            id: id}\n        fetch(\"/api/posts/deletePost\", \n        {\n        credentials: 'include',\n        method: 'POST',\n        body: JSON.stringify(di),\n        headers: {\n          'Content-Type': 'application/json',\n        //   method: 'DELETE'\n        }\n      })\n        // axios.delete(\"http://localhost:3001/posts/deletePost\", {withCredentials: true})\n        .then((res) => {\n            // console.log(res, \"resss\")\n            //const post = res.data.posts\n            // console.log(id)\n            //console.log(res)\n            dispatch(successDeletion(id))\n        })\n        .catch((err)=>{\n            dispatch(errorDeletion(err))\n        })\n    dispatch(processedDeletion())\n    }\n}\n\nexport default deletePost","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport Comment from \"./Comment\"\nimport deletePost from \"../../store/actions/DELETEPost/deletePost\"\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import IconButton from '@material-ui/core/IconButton'\n\nclass Post extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"\",\n      content: \"\",\n      post: this.props.post\n    }\n  }\n\n  \n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n    //console.log(this.state)\n  }\n\n  handleSubmit = (e) => {\n    //console.log(this.props)\n    e.preventDefault()\n    this.props.createComment(this.state)\n  }\n\n  handleDelete = (e) => {\n    this.props.dispatch(deletePost(this.props.match.params.path_id))\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    // console.log(this.props, \"props v post\")\n    const { post, username } = this.props\n    const { author } = this.props.post\n    const id = this.props.match.params.path_id\n    //console.log(this.props)\n    \n    const comments = post.comments.map((comment) => {\n      comment.date = new Date(comment.date)\n      comment.date = comment.date.toDateString()\n      let d = new Date().toJSON().slice(0,10).replace(/-/g,'/');\n      // console.log(d)\n      return (\n        <div className=\"post card\" key={comment._id}>\n          <div className=\"card-content\">\n            <span className=\"card-body\"  >{comment.comment}</span>\n            <br />\n            <br />\n            <div className=\"right-align\">\n              <span className=\"card-footer\" style={{ float: \"left\" }}>\n                Posted by {!comment.author ? username : comment.author} on {!comment.date ? d : comment.date}\n              </span>\n              <span className=\"card-footer\">\n                <i className=\"material-icons\">thumb_up</i>\n              </span>\n            </div>\n          </div>\n        </div>\n      )\n    })\n\n    let permit = post.permissions.toString()\n    permit = <p style={{ fontSize: 13 }}>{permit.replace(/,/g, ', ')}</p>\n    // console.log(permit)\n    post.date = new Date(post.date)\n    post.date = post.date.toDateString()\n    \n    return (\n      \n      \n      <div className=\"container\">\n        <div className=\"post card\" key={post._id} >\n          <div className=\"card-content\">\n            <span className=\"card-title\">{post.title}</span>\n            <span className=\"card-body\"  >{post.content}</span>\n\n            <br />\n            <br />\n            <div className=\"right-align\">\n              <span className=\"card-footer\" style={{ float: \"left\" }}>\n                Posted by {post.author} on {post.date}\n              </span>\n              <span className=\"card-footer\" >\n                {author === username \n                ? \n                <React.Fragment>\n                <Button onClick={this.handleDelete} className=\"btn card-footer blue darken-4 z-depth-0 white-text\" style={{ marginRight: \"15px\" }}>Delete</Button>\n\n                <Tooltip title={permit} >\n                  <Button className=\"btn card-footer blue darken-4 z-depth-0 white-text\">Visible to</Button>\n                </Tooltip>\n                </React.Fragment>\n                :  \n                <Tooltip title={permit} >\n                  <Button className=\"btn card-footer blue darken-4 z-depth-0 white-text\">Visible to</Button>\n                </Tooltip>}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div>{comments}</div>\n        < Comment id={id} ownUsername={this.props.ownUsername}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.path_id\n  return {\n    post: state.postsdata.posts.find(post => post._id === id),\n    status: state.postsdata.status,\n    users: state.users.usernames,\n    username: state.postsdata.username\n  }\n}\n\nexport default connect(mapStateToProps)(Post)\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport { Redirect } from 'react-router'\n\nclass SignIn extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    //const {email, password} = this.state\n    console.log(this.props.history)\n    e.preventDefault();\n\n          fetch(\"/api/auth/authenticate\", {\n            credentials: 'include',\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          // var body = await res.json()\n      \n          //     console.log(body)\n            .then((res) => {\n              // console.log(res)\n              // console.log(history)\n              if (200) {\n                console.log(\"resss poglej cookie\", res)\n                // console.log(res.text())\n                return res.json();\n              } else {\n                const error = new Error(res.error)\n                throw error;\n              }\n            })\n            .then((ownUsername) => {\n              // console.log(username)\n              this.props.sendUsername(ownUsername)\n              this.props.history.push(\"/\")\n            })\n            .catch(err => {\n              console.error(err);\n              // dispatch(errorLogIn(err))\n            })\n            // dispatch(processedLogIn())\n        }\n      \n          \n    // console.log(this.props,\"prooops\")\n    \n\n  render() {\n\n    // const { authError, auth } = this.props;\n    // if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" id='username' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue darken-4\">Login</button>\n            <div className=\"center red-text\">\n              {/* { authError ? <p>{authError}</p> : null } */}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendUsername: (ownUsername) => { dispatch({ type: \"LOGIN_SUCCESS\", ownUsername: ownUsername }) }\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport axios from \"axios\"\nimport { connect } from \"react-redux\"\n\nclass SignOut extends Component {\n\n  componentDidMount() {\n\n    axios.get(\"/api/auth/signOut\", { withCredentials: true })\n      .then((res) => {\n        console.log(res, \"bodyyyy\")\n        console.log(this.props)\n\n        this.props.loggedIn()\n        localStorage.removeItem(\"persist:root\")\n        this.props.history.push(\"/signin\")\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"center-align\">Logging out...</h2>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loggedIn: () => { dispatch({ type: \"LOGGEDOUT\" }) }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignOut)","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Hoc(ComponentToProtect) {\n  return class extends Component {\n    constructor(props) {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n\n    componentDidMount() {\n      //console.log(\"hello world\")\n      // fetch(\"/api/auth/checkToken/\", { withCredentials: true })\n      axios.get(\"/api/auth/checkToken/\", {withCredentials: true})\n        .then(res => {\n          console.log(res.status)\n          if (res.status === 200) {\n            this.setState({ loading: false });\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({ loading: false, redirect: true });\n        });\n    }\n\n\n    render() {\n      //console.log(\"hello world\")\n\n\n      const { loading, redirect } = this.state;\nreturn(\n      <div>\n      {loading \n      ? <p> </p> \n      : redirect \n      ? <Redirect to=\"/signin\" /> \n      : <React.Fragment>\n      <ComponentToProtect {...this.props} />\n      </React.Fragment>}\n      </div>\n      )     \n    }\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport {Switch, Route, Router, BrowserRouter, HashRouter} from \"react-router-dom\"\nimport './App.css';\nimport Navbar from \"./components/layout/Navbar\"\nimport Home from \"./components/posts/Home\"\nimport AddPost from \"./components/posts/AddPost\"\nimport Post from \"./components/posts/Post\"\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\n// import SignUp from './components/auth/SignUp'\nimport Hoc from \"./Hoc\"\n// import createBrowserHistory from 'history/createBrowserHistory'\n\n// export const history = createBrowserHistory()\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      \n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component = {Hoc(Home)}/>\n          <Route path=\"/AddPost\" component = {Hoc(AddPost)}/>\n          <Route path='/signin' component={SignIn}/>\n          {/* <Route path='/signup' component={SignUp} /> */}\n          <Route path='/signout' component={Hoc(SignOut)} />\n          <Route path=\"/proposal/:path_id\" component = {Hoc(Post)}/>\n        </Switch> \n        </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    posts: [],\n    status: \"\",\n    username:\"\"\n}\n\nconst postsReducer = (state = initState, action) => {\n  //console.log(state, \"state\")\n  //console.log(action, \"action\")\n\n      switch(action.type) {\n          case \"POSTS_REQUEST\":\n          const requested = {\n            ...state,\n            status:action.status,\n          }\n          return requested\n\n          case \"CREATION_REQUEST\":\n          const creationRequested = {\n            ...state,\n            status:action.status,\n          }\n          return creationRequested\n\n          case \"DELETION_REQUEST\":\n          const deletionRequested = {\n            ...state,\n            status:action.status,\n          }\n          return deletionRequested\n\n          case \"POSTS_SUCCESS\" :\n          const success = {\n            ...state,\n            status: action.status,\n            posts: action.posts,\n            username: action.username,\n          }\n          return success\n\n          case \"CREATION_SUCCESS\":\n          const creationSucc = {\n              ...state,\n              posts: [...state.posts, action.post],\n              status: action.status          \n            }\n          return creationSucc\n\n          case \"DELETION_SUCCESS\" :\n          const deletionSuccess = {\n            ...state,\n            status: action.status,\n            posts: state.posts.filter(({ id }) => id !== action.data),\n          }\n          return deletionSuccess\n\n          case \"POSTS_ERROR\":\n          const error = {\n              ...state,\n              status: action.status\n          }\n          return error\n\n          case \"CREATION_ERROR\"  :\n          const creationError = {\n              ...state,\n              status: action.status\n          }\n          return creationError \n          \n          case \"DELETION_ERROR\":\n          const deletionError = {\n              ...state,\n              status: action.status\n          }\n          return deletionError\n\n          case \"COMMENTCREATION_SUCCESS\":\n          const {id} = action.comment\n          const find = state.posts.find(post => {\n            return (post._id === id) \n           })\n          const index = state.posts.indexOf(find)\n          const creationCommentSucc = {\n            ...state,\n            posts: [\n              ...state.posts.slice(0, index),\n              {\n                ...state.posts[index],\n                comments : [ ...state.posts[index].comments,\n                action.comment]\n              },\n              ...state.posts.slice(index)\n            ]     \n          }\n          return creationCommentSucc\n\n          default:\n          return state\n      }\n  \n}\n\nexport default postsReducer\n","const initState = {\n    usernames: [],\n    status: \"\"\n}\n\nconst usersReducer = (state = initState, action) => {\n      switch(action.type) {\n          case \"USERS_REQUEST\":\n          const requested = {\n            ...state,\n            status:action.status,\n          }\n          return requested\n          case \"USERS_SUCCESS\" :\n          //console.log(\"PostSECC\", state)\n          const success = {\n            ...state,\n            users:action.usernames\n          }\n          return success\n          case \"USERS_ERROR\"  :\n          const error = {\n              ...state,\n              status: action.status\n          }\n          return error\n          default:\n          return state\n      }\n  \n}\n\nexport default usersReducer\n","const initState = {\n    loggedin: false,\n    ownUsername:\"\",\n    // status:\"\"\n  }\n  \n  const authReducer = (state = initState, action) => {\n    //console.log(action, \"6\")\n    switch(action.type) {\n      case 'LOGGEDIN':\n        //console.log('login success');\n        return {\n          ...state,\n          loggedin: true\n        }\n  \n      case 'LOGGEDOUT':\n        console.log('signout success');\n        return {\n          ...state,\n          loggedin: false\n        }\n\n        case 'LOGIN_SUCCESS':\n        console.log(action);\n        return {\n          ...state,\n          // status: action.status,\n          // username: action.useranme\n        }\n \n      default:\n        return state\n    }\n  }\n  \nexport default authReducer;","import postsReducer from './postsReducer';\nimport { combineReducers } from 'redux'\nimport usersReducer from './usersReducer';\nimport authReducer from './authReducer';\n\nconst rootReducer = combineReducers ({\n        postsdata: postsReducer,\n        users: usersReducer,\n        auth: authReducer\n})\n\nexport default rootReducer\n","import thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/es/storage'\nimport rootReducer from \"./store/reducers/rootReducer\"\n\n\nconst loggerMiddleware = createLogger()\n\nconst middleware = [thunk, loggerMiddleware]\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst configureStore = composeEnhancers(\n  applyMiddleware(...middleware),\n)(createStore)\n\nconst config = {\n  key: 'root',\n  storage,\n}\n\nconst combinedReducer = persistReducer(config, rootReducer)\n\nconst createAppStore = () => {\n  let store = configureStore(combinedReducer)\n  let persistor = persistStore(store)\n\n  return { persistor, store }\n}\n\nexport default createAppStore","import React, { Component } from 'react'\n\nexport default class Loading extends Component {\n  render() {\n    return (\n      <div>\n        <h1>LOADING...</h1>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\n// import store from \"./store\"\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport createAppStore from './store';\nimport Loading from \"./Loading\"\n\nconst { persistor, store } = createAppStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n\n\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}